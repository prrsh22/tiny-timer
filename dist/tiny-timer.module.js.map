{"version":3,"file":"tiny-timer.module.js","sources":["../src/tiny-timer.ts"],"sourcesContent":["import { EventEmitter } from 'events'\r\n\r\ntype Status = 'running' | 'paused' | 'stopped'\r\n\r\nclass Timer extends EventEmitter {\r\n  private _interval: number\r\n  private _stopwatch: boolean\r\n  private _duration: number\r\n  private _endTime: number\r\n  private _pauseTime: number = 0\r\n  private _status: Status = 'stopped'\r\n  private _timeoutID?: NodeJS.Timeout\r\n  private _defaultDuration: number\r\n\r\n  constructor ({ interval = 1000, stopwatch = false, defaultDuration = 30 * 1000 * 60 } = {}) {\r\n    super()\r\n    this._interval = interval\r\n    this._stopwatch = stopwatch\r\n    this._defaultDuration = defaultDuration\r\n    this._duration = defaultDuration\r\n    this._endTime = Date.now() + defaultDuration\r\n  }\r\n\r\n  public start (duration: number, interval?: number) {\r\n    if (this.status !== 'stopped') return\r\n    if (duration == null) throw new TypeError('Must provide duration parameter')\r\n    this._duration = duration\r\n    this._endTime = Date.now() + duration\r\n    this._changeStatus('running')\r\n    this.emit('tick', this._stopwatch ? 0 : this._duration)\r\n    this._timeoutID = setInterval(this.tick, interval || this._interval)\r\n  }\r\n\r\n  public stop () {\r\n    if (this._timeoutID) clearInterval(this._timeoutID)\r\n    // 스탑시 기본 duration으로 duration 재설정\r\n    this.changeDuration(this._defaultDuration - this._duration)\r\n    this._changeStatus('stopped')\r\n  }\r\n\r\n  public pause () {\r\n    if (this.status !== 'running') return\r\n    this._pauseTime = Date.now()\r\n    this._changeStatus('paused')\r\n  }\r\n\r\n  public resume () {\r\n    if (this.status !== 'paused') return\r\n    this._endTime += Date.now() - this._pauseTime\r\n    this._pauseTime = 0\r\n    this._changeStatus('running')\r\n  }\r\n  \r\n  //시간 ms단위로 추가, 차감하는 함수: 추가의 경우 amount가 양수, 차감의 경우 음수\r\n  public changeDuration (amount: number) {\r\n    if (this._endTime + amount < 3000) {\r\n      alert('차감이 불가합니다!');\r\n      return;\r\n    } else {\r\n      this._duration += amount;\r\n      this._endTime += amount;\r\n      this.emit('durationChanged', this._duration, amount);\r\n    }\r\n  }\r\n\r\n  private _changeStatus (status: Status) {\r\n    this._status = status\r\n    this.emit('statusChanged', this.status)\r\n  }\r\n\r\n  private tick = () => {\r\n    if (this.status === 'paused') return\r\n    if (Date.now() >= this._endTime) {\r\n      this.stop()\r\n      this.emit('tick', this._stopwatch ? this._duration : 0)\r\n      this.emit('done')\r\n      // 타이머 끝나면 또 defaultDuration으로\r\n      this.changeDuration(this._defaultDuration - this._duration)\r\n    } else {\r\n      this.emit('tick', this.time)\r\n    }\r\n  }\r\n\r\n  get time () {\r\n    if (this.status === 'stopped') return 0\r\n    const time = this.status === 'paused' ? this._pauseTime : Date.now()\r\n    const left = this._endTime - time\r\n    return this._stopwatch ? this._duration - left : left\r\n  }\r\n\r\n  get duration () {\r\n    return this._duration\r\n  }\r\n\r\n  get status () {\r\n    return this._status\r\n  }\r\n}\r\n\r\nexport default Timer\r\n"],"names":["Timer","EventEmitter","constructor","interval","stopwatch","defaultDuration","status","Date","now","_endTime","stop","emit","_stopwatch","_duration","changeDuration","_defaultDuration","time","_interval","start","duration","TypeError","_changeStatus","_timeoutID","setInterval","tick","clearInterval","pause","_pauseTime","resume","amount","alert","_status","left"],"mappings":"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"}